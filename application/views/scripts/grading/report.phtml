<?php

$seminarId = $this->params['seminarId'];

$seminarMapper = new Application_Model_SeminarMapper();

$surveyMapper = new Application_Model_SurveyMapper();

$seminar = $seminarMapper->findById($seminarId);

$surveys = $surveyMapper->getSeminarSurveys($seminarId);

usort($surveys, "compareReviewerLastNames");

$seminar['surveys'] = $surveys;

$seminar['scores'] = $seminarMapper->getSeminarScores($seminarId);

$header = '<h3>' . $seminar['presenter_last_name'] . ', ' . $seminar['presenter_first_name'] . '</h3>';

$header .= '<h4>Seminar Date: ' . $seminar['seminar_date'] . '</h4>';

$presenterDetails = $this->partial('grading/partials/presenterDetails.phtml', array('data' => $seminar));

$surveySummaries = $this->partial('grading/partials/reportSurveySummaries.phtml', array('surveys' => $seminar['surveys']));

$filename = sprintf("%s_%s_%s.pdf", trim($seminar['presenter_last_name']), trim($seminar['presenter_first_name']), trim($seminar['seminar_date']));

$formattedSurveyReport = array();
for ($count = 0; $count < count($seminar['surveys']); $count++) {
	$formattedSurveyReport[] = $this->surveyDetail()->formatReport($seminar['surveys'][$count], $count);
}

$contents = array(
	'header' => $header,
	'presenterDetails' => $presenterDetails,
	'surveySummaries' => $surveySummaries,
	'formattedSurveyReport' => $formattedSurveyReport
);

$report = $this->partial('grading/partials/reportTemplate.phtml', array('contents' => $contents));

$this->PDF($report, $filename);

function compareReviewerLastNames($a, $b)
{
	return strnatcmp($a['reviewer']['last_name'], $b['reviewer']['last_name']);
}

exit;


